@startuml mastermindClases
namespace sanguino.mastermind {

    class MasterMind{
	    - void play()
	    - boolean isResumedGame()
	    + static void main(String[])
    }

    class Board {
        Board()
        + void write()
        + void nextTurn()
        + void isFinished()
        + void writeGameResult()
    }

    abstract class Combination {
        + {static} NUMBER_COLORS
        - Color[] colors
    }

    class ProposedCombination extends Combination {
        ProposedCombination()
        + getColor
        + toString
    }

    class SecretCombination extends Combination {
        SecretCombination()
        + Result check(Combination)
    }

    class Result {
        - Success[] success
        Result(Success[])
        + isWinner()
        + toString()
    }

    enum Color {
        RED
        BLUE
        YELLOW
        GREEN
        ORANGE
        PURPLE
        NULL_COLOR
        - char symbol
        - Color(char)
        + {static} Color getFromValue(char)
    }

    enum Success {
        WHITE
        BLACK
        NULL_SUCCESS
        - Success()
    }

    enum Message {
        TITTLE
        ENTER_COMBINATION
        ATTEMPTS
        SECRET_CODE
        SEPARATOR
        PART_BLACKS
        PART_WHITES
        RESULT
        PLAYER_WIN
        PLAYER_LOOSE
        RESUME
        NULL_MESSAGE
        - String message
        - Message(String)
        + void writeln()
        + void writeln(int)
        + void writeln(String,)
    }

    MasterMind *-down-> Board
    Board o-down-> "0..10" ProposedCombination
    Board o-down-> SecretCombination
    Board o-down-> "0..10" Result
    Combination *-down-> "4" Color
    Result *-down-> "4" Success
    ProposedCombination .-down-> Message
    MasterMind .-down-> Message
    Board .-down-> Message
}

namespace sanguino.utils {

    class Console {
        + static Console console
        + static Console instance()
        - BufferedReader bufferedReader
        + String readString(String)
        + String readString()
        + int readInt(String)
        + char readChar(String)
        + void writeln()
        + void write(String)
        + void write(int)
        + void writeln(String)
        + void writeln(int)
        + void write(char)
        + void writeError(String +)
    }

    class CombinationStringDialog { 
        - Error checkLength(String, int)
        - Error checkNotDuplicated(String)
        - Error checkCharacters(String)
        - Error checkErrors(String, int)
        + int read(String)
    }

    class YesNoDialog {
        - static final char AFFIRMATIVE
        - static final char NEGATIVE
        - static final String SUFFIX
        - static final String MESSAGE
        - char answer;
        + boolean read(String message)
        - boolean isAfirmative()
        - char getAnswer()
        - boolean isNegative()
    }

    enum Error {
        WRONG_LENGTH
        WRONG_COLOR
        WRONG_DUPLICATED
        NULL_ERROR
        - String message
        Error()
        Error(String)
        + void writeln()
    }

    YesNoDialog .-down-> Console
    CombinationStringDialog .-down-> Console
    CombinationStringDialog .-down-> Error
    Error .-down-> Console
}

sanguino.mastermind.Message .-down-> sanguino.utils.Console
sanguino.mastermind.Board .-down-> sanguino.utils.CombinationStringDialog
sanguino.mastermind.MasterMind .-down-> sanguino.utils.YesNoDialog

@enduml